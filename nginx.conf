server {
    listen 80;
    server_name ntu-add-drop-automator.site www.ntu-add-drop-automator.site;

    location /static/ {
        alias /root/ntu-add-drop-automator/static/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        add_header Access-Control-Allow-Origin *;  # Add CORS header
        try_files $uri $uri/ =404;
        
        # Fix permissions issue
        auth_basic off;
        allow all;
    }

    location / {
        proxy_pass http://127.0.0.1:5000;  # This works since we bound the port to localhost
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Add error logs
    error_log /var/log/nginx/app-error.log;
    access_log /var/log/nginx/app-access.log;

    # Certbot will add SSL configuration here
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/ntu-add-drop-automator.site/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ntu-add-drop-automator.site/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.ntu-add-drop-automator.site) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = ntu-add-drop-automator.site) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name ntu-add-drop-automator.site www.ntu-add-drop-automator.site;
    return 404; # managed by Certbot
}